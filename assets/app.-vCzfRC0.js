import{u as f,o as r,b as _,w as g,m as s,k as c,t as p,c as u,a as y,F as A,E as v,e as C,v as l,a4 as w,a5 as P,a6 as b,a7 as E,a8 as L,a9 as k,aa as R,ab as x,ac as D,ad as T,Y as V,d as B,j as F,z as S,ae as j,af as M,ag as N,ah as O}from"./chunks/framework.0BOmzfss.js";import{t as m}from"./chunks/theme.ZGB2gMsN.js";const $={class:"page-title"},G={class:"page-info"},I={class:"page-info"},z={key:0},H={__name:"MyLayout",setup(e){const{Layout:a}=m,{frontmatter:t}=f();return(n,i)=>(r(),_(s(a),null,{"doc-before":g(()=>[c("h1",$,p(s(t).title),1),c("span",G,"✍️"+p(s(t).author),1),c("span",I,"🕐"+p(s(t).date),1),s(t).tags?(r(),u("span",z,[y("🔗 "),(r(!0),u(A,null,v(s(t).tags,d=>(r(),u("span",{class:"page-info",key:d},p(d),1))),128))])):C("",!0)]),_:1}))}},U={...m,Layout:H,enhanceApp({app:e}){e.component("MyGlobalComponent")}};function h(e){if(e.extends){const a=h(e.extends);return{...a,...e,async enhanceApp(t){a.enhanceApp&&await a.enhanceApp(t),e.enhanceApp&&await e.enhanceApp(t)}}}return e}const o=h(U),Y=B({name:"VitePressApp",setup(){const{site:e}=f();return F(()=>{S(()=>{document.documentElement.lang=e.value.lang,document.documentElement.dir=e.value.dir})}),e.value.router.prefetchLinks&&j(),M(),N(),o.setup&&o.setup(),()=>O(o.Layout)}});async function q(){const e=K(),a=J();a.provide(P,e);const t=b(e.route);return a.provide(E,t),a.component("Content",L),a.component("ClientOnly",k),Object.defineProperties(a.config.globalProperties,{$frontmatter:{get(){return t.frontmatter.value}},$params:{get(){return t.page.value.params}}}),o.enhanceApp&&await o.enhanceApp({app:a,router:e,siteData:R}),{app:a,router:e,data:t}}function J(){return x(Y)}function K(){let e=l,a;return D(t=>{let n=T(t),i=null;return n&&(e&&(a=n),(e||a===n)&&(n=n.replace(/\.js$/,".lean.js")),i=V(()=>import(n),__vite__mapDeps([]))),l&&(e=!1),i},o.NotFound)}l&&q().then(({app:e,router:a,data:t})=>{a.go().then(()=>{w(a.route,t.site),e.mount("#app")})});export{q as createApp};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}